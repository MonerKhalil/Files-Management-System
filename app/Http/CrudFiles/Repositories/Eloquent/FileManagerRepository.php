<?php

namespace App\Http\CrudFiles\Repositories\Eloquent;

use App\DTO\FileManagerDTO;
use App\Http\CrudFiles\Repositories\Interfaces\IFileManagerRepository;
use App\Http\CrudFiles\ViewFields\FileManagerViewFields;
use App\Http\CrudFiles\Actions\FileManagerAction;
use App\Models\FileManager;
use App\Helpers\ClassesBase\Repositories\BaseRepository;
use App\Helpers\ClassesBase\BaseViewFields;
use App\Helpers\ClassesBase\Routes\CrudActions;

class FileManagerRepository extends BaseRepository implements IFileManagerRepository
{
    public string|null $diskStorage = FileManager::DISK;

    public function model(){
        return FileManager::class;
    }

    public function queryModel(){
        return FileManager::query();
    }

    public function viewFields():BaseViewFields{
        return new FileManagerViewFields($this);
    }

    public function actions():CrudActions{
        return new FileManagerAction($this);
    }

    public function create($data, bool $showMessage = true,array $fieldsFile = []): mixed
    {
        return parent::create((new FileManagerDTO($data))->toArray(), $showMessage,$fieldsFile); // TODO: Change the autogenerated stub
    }

    public function update($data, $itemId, bool $showMessage = true, ?callable $callback = null,array $fieldsFile = []): mixed
    {
        return parent::update((new FileManagerDTO($data))->toArray(), $itemId, $showMessage, $callback,$fieldsFile); // TODO: Change the autogenerated stub
    }
}
